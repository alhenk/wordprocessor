<?xml version="1.0" ?>
<project name="wordprocessor" basedir="." default="build">

	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />

	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="junit.jar" location="lib/junit-4.1.jar" />
	<property name="log4j.jar" location="lib/log4j-1.2.17.jar" />

	<property name="test.dir" location="${build.dir}/test" />
	<property name="test.data.dir" location="${test.dir}/data" />
	<property name="test.reports.dir" location="${test.dir}/reports" />

	<echo level="error" message="running" />

	<path id="build.classpath">
		<pathelement location="${build.dir}/classes" />
		<pathelement location="${log4j.jar}" />
		<pathelement location="${junit.jar}" />
	</path>

	<target name="init">
		<mkdir dir="${build.dir}/classes" />
		<mkdir dir="${dist.dir}" />
		<copy file="./resources/log4j.properties" todir="${build.dir}/classes" />
		<copy todir= "${build.dir}/classes/com/epam/koryagin/wp/resources">
					<fileset dir="${src.dir}/com/epam/koryagin/wp/resources"></fileset>
				</copy>
	</target>

	<target name="build" depends="build-project" />
	<target name="build-project" depends="init" description="Compiles the source code">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac includeantruntime="true" debug="true" debuglevel="${debuglevel}" destdir="${build.dir}/classes" fork="yes" target="${target}" srcdir="${src.dir}">
			<src path="src" />
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<target name="archive" depends="build-project" description="Creates the JAR file">
		<jar destfile="dist/wp.jar" basedir="${build.dir}" />
	</target>

	<target name="clean" depends="init, test-init">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="run" depends="build-project, archive">
		<java classname="com.epam.koryagin.wp.Runner" failonerror="true" fork="yes">
			<classpath refid="build.classpath" />
		</java>
	</target>

	<path id="test.classpath">
		<path refid="build.classpath" />
		<pathelement location="${build.dir}/classes" />
		<pathelement location="${junit.jar}" />
		<pathelement location="${build.dir}/test" />
	</path>

	<target name="test-init" depends="init">
		<mkdir dir="${test.dir}" />
		<delete dir="${test.data.dir}" />
		<delete dir="${test.reports.dir}" />
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" />
	</target>

	<target name="test-build" depends="build, test-init">
		<javac destdir="${test.dir}" debug="${build.debug}" includeAntRuntime="true" srcdir="test">
			<classpath refid="test.classpath" />
		</javac>
		<copy todir="${test.dir}">
			<fileset dir="test" excludes="**/*.java" />
		</copy>
	</target>

	<target name="test" depends="test-build">
		<junit printsummary="false" errorProperty="test.failed" haltonfailure="true">
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.data.dir}">
				<fileset dir="${test.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<junitreport todir="${test.data.dir}">
			<fileset dir="${test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}" />
		</junitreport>
		<fail message="Tests failed. Check log and/or reports." if="test.failed" />
	</target>

</project>
